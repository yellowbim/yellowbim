name: Update Work Contributions

on:
  schedule:
    - cron: "0 0 * * *"   # 매일 자정 실행
  workflow_dispatch:       # 수동 실행도 가능

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # 리포에 push 권한 부여

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Fetch contributions via GraphQL
        run: |
          curl -s -H "Authorization: bearer ${{ secrets.LEEJUNGJUN96_GH_TOKEN }}" \
               -X POST -d '{ "query": "query { user(login:\"leejungjun96\"){ contributionsCollection { contributionCalendar { totalContributions weeks { contributionDays { date contributionCount color } } } } } }" }' \
               https://api.github.com/graphql > contributions.json

      - name: Convert JSON to SVG (Contribution Heatmap)
        run: |
          python3 - <<'EOF'
          import json

          with open("contributions.json") as f:
              data = json.load(f)

          weeks = data["data"]["user"]["contributionsCollection"]["contributionCalendar"]["weeks"]

          cell_size = 10
          gap = 2
          width = len(weeks) * (cell_size + gap)
          height = 7 * (cell_size + gap)

          svg = [
              f'<svg xmlns="http://www.w3.org/2000/svg" width="{width}" height="{height}" viewBox="0 0 {width} {height}">',
              '<style>rect{shape-rendering:crispEdges;}</style>'
          ]

          def get_color(count):
              if count == 0:
                  return "#ebedf0"
              elif count < 10:
                  return "#9be9a8"
              elif count < 20:
                  return "#40c463"
              elif count < 30:
                  return "#30a14e"
              else:
                  return "#216e39"

          for x, week in enumerate(weeks):
              for y, day in enumerate(week["contributionDays"]):
                  count = day["contributionCount"]
                  color = get_color(count)
                  svg.append(
                      f'<rect x="{x*(cell_size+gap)}" y="{y*(cell_size+gap)}" '
                      f'width="{cell_size}" height="{cell_size}" fill="{color}" rx="2" ry="2"/>'
                  )

          svg.append("</svg>")

          with open("contributions.svg", "w") as f:
              f.write("\n".join(svg))
          EOF

      - name: Commit & Push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add contributions.svg
          git commit -m "Update contributions chart" || echo "No changes"
          git push
